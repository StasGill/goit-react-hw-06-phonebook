{"version":3,"sources":["components/contactList/ContactList.js","redux/constant/constant.js","redux/actions/actions.js","components/addForm/AddForm.js","components/App.js","redux/reducer/Reduser.js","redux/store.js","index.js"],"names":["ContactList","key","contact","handleDelete","className","name","number","onClick","id","ADDNEWNUMBER","DELETENUMBER","SETFILTER","SETWARNING","addNewNumber","createAction","data","payload","uuidv4","deleteNumber","setFilter","setWarning","initialState","connect","state","contacts","filter","dispatch","addNumber","warning","useState","setState","onChange","e","target","value","onSubmit","preventDefault","checkName","some","item","contactObject","type","placeholder","App","setNewFilter","props","localStorage","setItem","JSON","stringify","handleFilter","toLowerCase","includes","CSSTransition","in","this","timeout","classNames","unmountOnExit","appear","length","TransitionGroup","component","map","Component","Reducer","createReducer","action","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5e5267d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({contact,handleDelete}, key ) => {\r\n   \r\n    return (\r\n        <li className=\"listItem\" key={key} >\r\n            <p><span>Name:  </span> {contact.name}</p>\r\n            <p><span>Number:  </span> {contact.number}</p>\r\n            <button onClick={handleDelete} className=\"handleButton\" name={contact.id}>Delete</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contact: PropTypes.object,\r\n  };\r\n\r\nexport default ContactList;","const ADDNEWNUMBER = \"@bootCamps/adNewNumber\";\r\nconst DELETENUMBER = \"@bootCamps/deleteNumber\";\r\nconst SETFILTER = \"@bootCamps/setFilter\";\r\nconst SETWARNING = \"@bootCamps/setWarning\";\r\n\r\nexport { ADDNEWNUMBER, DELETENUMBER, SETFILTER, SETWARNING };","import { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  ADDNEWNUMBER,\r\n  DELETENUMBER,\r\n  SETFILTER,\r\n  SETWARNING,\r\n} from \"../constant/constant\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const addNewNumber = (data) => ({\r\n//   type: ADDNEWNUMBER,\r\n//   payload: { ...data, id: uuidv4() },\r\n// });\r\n\r\n// export const deleteNumber = (id) => ({\r\n//   type: DELETENUMBER,\r\n//   payload: id,\r\n// });\r\n\r\n// export const setFilter = (value) => ({\r\n//   type: SETFILTER,\r\n//   payload: value,\r\n// });\r\n// export const setWarning = (warning) => ({\r\n//   type: SETWARNING,\r\n//   payload: warning,\r\n// });\r\n\r\nexport const addNewNumber = createAction(ADDNEWNUMBER, (data) => ({\r\n  payload: {\r\n    ...data,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\nexport const deleteNumber = createAction(DELETENUMBER);\r\nexport const setFilter = createAction(SETFILTER);\r\nexport const setWarning = createAction(SETWARNING);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  addNewNumber,\r\n  deleteNumber,\r\n  setFilter,\r\n  setWarning,\r\n} from \"../../redux/actions/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst AddForm = ({ contacts, addNumber, deleteNumber, setWarning }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const onChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkName = state.name;\r\n    const filteredName = contacts.some((item) => item.name === checkName);\r\n\r\n    if (filteredName) {\r\n      setWarning(\"on\");\r\n      setState({ ...initialState });\r\n    } else {\r\n      const contactObject = {\r\n        name: state.name,\r\n        number: state.number,\r\n      };\r\n      addNumber(contactObject);\r\n      setState({ ...initialState });\r\n      setWarning(\"off\");\r\n      // localStorage.setItem(\r\n      //   \"phoneBook\",\r\n      //   JSON.stringify(contacts)\r\n      // );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addPanel\">\r\n      <form onSubmit={onSubmit}>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          className=\"addPanelInput\"\r\n          placeholder=\"Type name...\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          onChange={onChange}\r\n        ></input>\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"text\"\r\n          className=\"addPanelInput\"\r\n          placeholder=\"Type number...\"\r\n          name=\"number\"\r\n          value={state.number}\r\n          onChange={onChange}\r\n        ></input>\r\n        <br />\r\n        <button type=\"submit\" className=\"handleButton\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n    filter: state.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNumber: (id) => {\r\n      dispatch(addNewNumber(id));\r\n    },\r\n    deleteNumber: (id) => {\r\n      dispatch(deleteNumber(id));\r\n    },\r\n    setFilter: (id) => {\r\n      dispatch(setFilter(id));\r\n    },\r\n    setWarning: (warning) => {\r\n      dispatch(setWarning(warning));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddForm);\r\n","import React, { Component } from \"react\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport \"./app.css\";\r\nimport AddForm from \"./addForm/AddForm\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addNewNumber,\r\n  deleteNumber,\r\n  setFilter,\r\n} from \"../redux/actions/actions\";\r\n\r\nclass App extends Component {\r\n  setNewFilter = (e) => {\r\n    this.props.setFilter(e.target.value);\r\n  };\r\n\r\n  handleDelete = (e) => {\r\n    const id = e.target.name;\r\n    this.props.deleteNumber(id);\r\n    localStorage.setItem(\"phoneBook\", JSON.stringify(this.props.contacts));\r\n  };\r\n  handleFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n  filter = () => {\r\n    if (this.props.contacts) {\r\n      const filtered = this.props.contacts.filter((item) =>\r\n        item.name.toLowerCase().includes(this.props.filter.toLowerCase())\r\n      );\r\n      return filtered;\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  // componentDidMount() {\r\n\r\n  //   const dataLocal = JSON.parse(localStorage.getItem(\"phoneBook\"));\r\n  //   console.log(dataLocal)\r\n  //   if (dataLocal) {\r\n  //     this.props.addNumber(dataLocal);\r\n  //   } else {\r\n  //     return;\r\n  //   }\r\n  // }\r\n  // componentDidUpdate() {\r\n  //   // localStorage.setItem(\"phoneBook\", JSON.stringify(this.state.contacts));\r\n  //   const dataLocal = JSON.parse(localStorage.getItem(\"phoneBook\"));\r\n  //   if (dataLocal) {\r\n  //     this.props.contacts({ contacts: [...dataLocal] });\r\n  //   } else {\r\n  //     return;\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={this.props.warning === \"on\"}\r\n          timeout={500}\r\n          classNames=\"fade\"\r\n          unmountOnExit\r\n        >\r\n          <div className=\"warning\">\r\n            <p>Contact already exist</p>\r\n          </div>\r\n        </CSSTransition>\r\n\r\n        <div className=\"addPanel\">\r\n          <CSSTransition in={true} timeout={300} classNames=\"alert\" appear>\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n        </div>\r\n\r\n        <AddForm />\r\n\r\n        {this.props.contacts.length > 0 && (\r\n          <div className=\"addPanel\">\r\n            <input\r\n              name=\"filter\"\r\n              onChange={this.setNewFilter}\r\n              className=\"addPanelInput\"\r\n              placeholder=\"Find contact...\"\r\n            ></input>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"addPanel\">\r\n          <h2>Contacts</h2>\r\n\r\n          <TransitionGroup component=\"ul\">\r\n            {this.filter().map((contact) => (\r\n              <CSSTransition key={contact.id} timeout={300} classNames=\"item\">\r\n                <ContactList\r\n                  contact={contact}\r\n                  handleDelete={this.handleDelete}\r\n                  key={contact.id}\r\n                />\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n    filter: state.filter,\r\n    warning: state.warning,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNumber: (id) => {\r\n      dispatch(addNewNumber(id));\r\n    },\r\n    deleteNumber: (id) => {\r\n      dispatch(deleteNumber(id));\r\n    },\r\n    setFilter: (id) => {\r\n      dispatch(setFilter(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  ADDNEWNUMBER,\r\n  DELETENUMBER,\r\n  SETWARNING,\r\n  SETFILTER,\r\n} from \"../constant/constant\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: \"\",\r\n  warning: \"\",\r\n};\r\n\r\n// const Reducer = (state = { ...initialState }, action) => {\r\n//   switch (action.type) {\r\n//     case ADDNEWNUMBER:\r\n//       return { ...state, contacts: [...state.contacts, action.payload] };\r\n\r\n//     case DELETENUMBER:\r\n//       return {\r\n//         ...state,\r\n//         contacts: [\r\n//           ...state.contacts.filter((item) => item.id !== action.payload),\r\n//         ],\r\n//       };\r\n//     case SETFILTER:\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//       };\r\n//     case SETWARNING:\r\n//       return {\r\n//         ...state,\r\n//         warning: action.payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst Reducer = createReducer(\r\n  { ...initialState },\r\n  {\r\n    [ADDNEWNUMBER]: (state, action) => ({\r\n      ...state,\r\n      contacts: [...state.contacts, action.payload],\r\n    }),\r\n\r\n    [DELETENUMBER]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        contacts: [\r\n          ...state.contacts.filter((item) => item.id !== action.payload),\r\n        ],\r\n      };\r\n    },\r\n    [SETFILTER]: (state, action) => ({\r\n      ...state,\r\n      filter: action.payload,\r\n    }),\r\n    [SETWARNING]: (state, action) => ({\r\n      ...state,\r\n      warning: action.payload,\r\n    }),\r\n  }\r\n);\r\n\r\nexport default Reducer;\r\n","// import { createStore, combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport Reducer from \"./reducer/Reduser\";\r\n\r\n// const store = createStore(Reducer, composeWithDevTools());\r\n\r\n// const rootReducer = combineReducers({\r\n//   Reducer,\r\n// });\r\n\r\nconst store = configureStore({\r\n  reducer: Reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}